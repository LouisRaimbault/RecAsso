library(rhub)
install.packages("rhub")
library(rhub)
rhub::check_for_cran()
usethis::use_cran_comments()
test1 = runif(4, min = 0.1, max = 0.15)
test2 = runif(4, min = 0.15, max = 0.20)
test3 = runif(4, min = 0.20, max = 0.25)
test4 = runif(3, min = 0.25, max = 0.4)
test = c(test1,test2,test3,test4)
lol=rbinom(1500, size = 1, prob = test)
Datatest= as.data.frame(matrix(lol,ncol = 15, byrow = T))
colnames(Datatest)=c("banana", "pear", "apple", "cherry", "apricot", "pineapple", "orange", "mandarin", "mango", "strawberries", "blueberries","blackberries" ,"raspberry", "currants","grapes")
View(Datatest)
which(rowSums(Datatest))==0
which(rowSums(Datatest)==0)
Rcpp::sourceCpp('~/Bureau/Package_Rulestest/Fonctions_du_package/BinarytoTRansac.cpp')
Datatest[21,5]=1
Datatest[21,9]=1
Datatest[99,5]=1
Datatest[99,9]=1
View(Datatest)
Transacfruits = From_binary_to_transac(Datatest, names(Datatest))
View(Datatest)
Transacfruits=as.data.frame(Transacfruits)
write.table(Transacfruits)
write.table(Transacfruits, file = "/home/lraimbault/Bureau/Transacfruits.txt", col.names = F, row.names = F)
Rcpp::sourceCpp('~/Bureau/RecAssoRules/src/Recassorulesfunction.cpp')
mydata = transactiontoBitmax(as.matrix(Transacfruits),",")
A = prefrecset(mydata, names(mydata),0)
View(A)
A = prefrecset(mydata, names(mydata),0.05)
Rcpp::sourceCpp('~/Bureau/RecAssoRules/src/Recassorulesfunction.cpp')
A = prefrecset(mydata, names(mydata),0.05)
View(A)
B= prefrecrules(mydata, names(mydata),0.05, 0)
View(B)
C = B$frequent_itemset
D = B$confident_rules
View(C)
View(D)
B= prefrecrules(mydata, names(mydata),0.05, 0.2)
Rcpp::sourceCpp('~/Bureau/Recassorulesfunction_save.cpp')
B= prefrecset(mydata, names(mydata),1)
View(B)
Rcpp::sourceCpp('~/Bureau/Recassorulesfunction_save.cpp')
B= prefrecset(mydata, names(mydata),0)
B= prefrecrules(mydata, names(mydata),0.05, 0.2)
B= prefrecrules(mydata, names(mydata),1, 0.2)
